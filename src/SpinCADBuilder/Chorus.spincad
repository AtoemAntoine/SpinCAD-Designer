@name Chorus
@audioInput input Input
@audioOutput output1 Output
@controlInput rateIn LFO_Rate 
@controlInput widthIn LFO_Width 

equ rateMax 511
equ widthMax 16384

equ output1 reg0 

// total allocated memory buffer for this delay
// create a Control Panel with a Slider Label
equ delayLength 512 
@sliderLabel delayLength Chorus_Time 128 2048 512 1 0 lengthToTime

equ tap1Center 0.5 
@sliderLabel tap1Center Tap_1_Center 0.25 0.75 0.5 1000.0 2

;equ tap2Center 0.25 
;@sliderLabel tap2Center Tap_2_Center 0.0 1.0 0.5 1000.0 2 

equ rate 20
@sliderLabel rate LFO_Rate 0.0 511.0 20.0 100.0 2 SINLFOFREQ

// max width (in samples) of LFO = delayLength/2.
// this allows the center to be placed from 25% to 75%
// From AN-001:
// The equation to calculate the coefficient for the amplitude for a given delay length for use in a WLDS instruction is:
// Ka = (N * 32767)/16385
// So, assuming that we want N to be delayLength/2, then Ka should be:
// Ka = delayLength * (0.5 * 32767/16385)
// or
// Ka = delayLength * 0.9999084528532194

equ width 64	// double value of width %
@sliderLabel width LFO_Width 0.0 100.0 3.0 100.0 1

// ComboBox needs to show LFO 0 or LFO 1
// in block code, need to select between SIN0 or SIN1 parameter
// setter/getter passes index of combobox item, for now
// let's see if we can make it work.

equ lfoSel 0
@comboBox lfoSel 'LFO 0' 'LFO 1'

@isPinConnected Input
;
; Memory declarations
equ delayOffset -1 
@getBaseAddress 
mem delayl delayLength ; delay should actually be delay * 2 as panel setting is sweep center

@isEqualTo lfoSel 0
skp run,START 
wlds SIN0, 50, 64
START: 
@else
skp run,START1 
wlds SIN1, 50, 64
START1: 
@endif

@isPinConnected LFO_Width
@divideDouble temp width widthMax
rdax	widthIn, temp
@isEqualTo lfoSel 0 
wrax SIN0_RANGE, 0
@else
wrax SIN1_RANGE, 0
@endif
@endif

// Here's the expression for scaling the LFO rate by the control input.
// we read the control and scale it by the slider setting/511 which is max.
// sfxb.readRegister(speedIn, lfoRate/511.0);	

@isPinConnected LFO_Rate
@divideDouble temp1 rate rateMax
rdax	rateIn, temp1
@isEqualTo lfoSel 0 
wrax SIN0_RATE, 0
@else
wrax SIN1_RATE, 0
@endif
@endif

ldax input
; Write it to delay and clear ACC
wra delayl,0

@isEqualTo lfoSel 0
@readChorusTap 0 0 tap1Center delayLength delayOffset 
@else
@readChorusTap 1 0 tap1Center delayLength delayOffset 
@endif

; @readChorusTap 0 1 tap2Center delayLength delayOffset 

; Interpolated sample in ACC, write it to DACL and clear ACC
wrax output1,0
; That's it!
@setOutputPin Output output1
@endif

