@name MN3011a
@audioInput adcl Input 
@audioOutput mix Mix_Out
@audioOutput output1 Delay_Out_End 
@controlInput cIn1 Delay_Time_1 

equ inputGain 0.45
@sliderLabel inputGain Input_Gain  0.0 1.0 0.5 1000.0 2

// total allocated memory buffer for this delay
// create a Control Panel with a Slider Label
equ delayLength 32767 
@sliderLabel delayLength Delay_Time 0 32767 16384 1 0 lengthToTime
		
// tap 1 length in % (control panel value) 
// 	'equ' ename = ID value = SPINDOUBLE (controlType = ID controlName = ID max = SPINDOUBLE multiplier = SPINDOUBLE)?;

// tap1 = 396/3328
equ tap1Ratio 0.118990385 
equ tap1Gain 0.5
@sliderLabel tap1Gain Tap_1_Gain  0.0 1.0 0.5 1000.0 2
  
// tap 2 = 662/3328
equ tap2Ratio 0.198918269 
equ tap2Gain 0.5
@sliderLabel tap2Gain Tap_2_Gain  0.0 1.0 0.5 1000.0 2

// tap 3 
equ tap3Ratio 0.358774038 
equ tap3Gain 0.5
@sliderLabel tap3Gain Tap_3_Gain  0.0 1.0 0.5 1000.0 2

equ tap4Ratio 0.518629808
equ tap4Gain 0.5
@sliderLabel tap4Gain Tap_4_Gain  0.0 1.0 0.5 1000.0 2
  
equ tap5Ratio 0.838341346 
equ tap5Gain 0.5
@sliderLabel tap5Gain Tap_5_Gain  0.0 1.0 0.5 1000.0 2
  
equ tap6Ratio 1.0 
equ tap6Gain 0.5
@sliderLabel tap6Gain Tap_6_Gain  0.0 1.0 0.5 1000.0 2
  
equ delayOffset -1

// establish the base address for this module
@getBaseAddress 
// then allocate the buffer
mem mn3011delay delayLength 

// input connection must be there for any code to be generated
@isPinConnected Input
// read the input and write to base of delay line
rdax adcl, inputGain
wra mn3011delay, 0.0
equ   mix  reg0      

// tap 1 -----------------------------------------------------------

@isPinConnected Delay_Time_1
equ max reg1

clr
or $7FFF00
mulx cIn1
// max now holds the value of the POT scaled by max ADDR_PTR
wrax max,1.0

@getDelayScaleControl tap1Ratio delayLength delayOffset 
wrax ADDR_PTR, 0
rmpa tap1Gain
wrax mix, 0.0 

// tap 2 -----------------------------------------------------------
rdax max, 1.0

@getDelayScaleControl tap2Ratio delayLength delayOffset 
wrax ADDR_PTR, 0
rmpa tap2Gain
rdax mix, 1.0
wrax mix, 0.0

// tap 3 -----------------------------------------------------------
rdax max, 1.0

@getDelayScaleControl tap3Ratio delayLength delayOffset
wrax ADDR_PTR, 0
rmpa tap3Gain
rdax mix, 1.0
wrax mix, 0.0

// tap 4 -----------------------------------------------------------
rdax max, 1.0

@getDelayScaleControl tap4Ratio delayLength delayOffset
wrax ADDR_PTR, 0
rmpa tap4Gain
rdax mix, 1.0
wrax mix, 0.0

// tap 5 -----------------------------------------------------------
rdax max, 1.0

@getDelayScaleControl tap5Ratio delayLength delayOffset
wrax ADDR_PTR, 0
rmpa tap5Gain
rdax mix, 1.0
wrax mix, 0.0 

// tap 6 -----------------------------------------------------------
rdax max, 1.0

@getDelayScaleControl tap6Ratio delayLength delayOffset
wrax ADDR_PTR, 0
rmpa tap6Gain
rdax mix, 1.0
// fixed delay spacing below
@else
offset ratio 1   

@getSamplesFromRatio ratio tap1Ratio delayLength 
rda mn3011delay+ratio, tap1Gain

@getSamplesFromRatio ratio tap2Ratio delayLength 
rda mn3011delay+ratio, tap2Gain

@getSamplesFromRatio ratio tap3Ratio delayLength 
rda mn3011delay+ratio, tap3Gain

@getSamplesFromRatio ratio tap4Ratio delayLength 
rda mn3011delay+ratio, tap4Gain

@getSamplesFromRatio ratio tap5Ratio delayLength 
rda mn3011delay+ratio, tap5Gain

@getSamplesFromRatio ratio tap6Ratio delayLength 
rda mn3011delay+ratio, tap6Gain
@endif

wrax mix, 0.0
@setOutputPin Mix_Out mix

// set the end tap regardless if the control input is connected
equ output5 reg5
rda mn3011delay#, 1.0
wrax output5, 0.0
@setOutputPin Delay_Out_End output5

@endif


